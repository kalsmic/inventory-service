name: Build and Deployment

on:
  push:
    branches: [ main ]
    tags:
    - "v*.*.*"
  pull_request:
    branches: [ main ]


jobs:

  build:
    runs-on:  ${{matrix.os}}
    strategy:
      matrix:
        os: [ubuntu-latest] #windows-latest, macOs-latest
    steps:
    - uses: actions/checkout@v2

    - name: Set up Go
      uses: actions/setup-go@v2
      with:
        go-version: 1.17

    - name: Build
      run: go build -v ./...

    - name: Test
      run: go test -v ./...

  publish:
    runs-on: ubuntu-latest
    needs: build
    if: startsWith(github.ref, 'refs/tags/v')
    steps:
      -
      # check out our repository under $GITHUB_WORKSPACE, so our workflow can access it.
        name: Checkout 
        uses: actions/checkout@v2

      -
      # use our Personal Access Token (PAT) and username to log into Docker Hub
        name: Login to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
                
      -
      # setup Docker Buildx to create the builder instance using a BuildKit container under the hood
        name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      - 
        name: Set env
        run: echo "RELEASE_VERSION=${GITHUB_REF#refs/*/}" >> $GITHUB_ENV
     
      -
        name: Build and push
        uses: docker/build-push-action@v2
        with:
          context: ./
          file: ./Dockerfile
          builder: ${{ steps.buildx.outputs.name }}
          push: ${{ github.ref == 'refs/heads/main' }}
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/inventory-service:${{ env.RELEASE_VERSION }}
          cache-from: type=registry,ref=${{ secrets.DOCKERHUB_USERNAME }}/inventory-service:buildcache
          cache-to: type=registry,ref=${{ secrets.DOCKERHUB_USERNAME }}/inventory-service:buildcache,mode=max

      - 
        name: Deploy to Heroku
        uses: akhileshns/heroku-deploy@v3.12.12 
        with:
          heroku_api_key: ${{secrets.HEROKU_API_KEY}}
          heroku_app_name: "kalsmic-inventory-service" 
          heroku_email: ${{secrets.HEROKU_EMAIL}}
          healthcheck: "https://kalsmic-inventory-service.herokuapp.com/health"
          checkstring: "ok"
          usedocker: true
          branch: "main"

        env:
          HD_RANDOM_DATA: "Hello"
          HD_PORT: 5000
